public class $0 {
	static final double $0 = $1-$2;
	$0 $1, $2, $3;
	double $0, $1, $2;
	$0($1 $2, $1 $3, $1 $4)	
	{
		$0 = $1;
		if($0.$1($2, $3, $4)) { $5 = $3; $6 = $4; }
		else { $0 = $1; $2 = $3; }
		$0 = $1.$2($3); $4 = $3.$2($5); $6 = $5.$2($1);
	}
	double $0()
	{
		return $0 + $1 + $2;
	}
	double $0()
	{
		double $0 = ($1 + $2 + $3) / $4.$5;
		return $0.$1($2 * ($2 - $3) * ($2 - $4) * ($2 - $5));		
	}
	double $0() 
	{  return $0.$1($2.$3 * $4.$5 - $2.$5 * $4.$3 + $4.$3 * $6.$5 - $4.$5 * $6.$3 + $6.$3 * $2.$5 - $6.$5 * $2.$3) / $7.$8; }
	double $0()
	{
		return $0.$1 * (($2.$3 - $4.$3) * ($5.$6 - $4.$6) - ($5.$3 - $4.$3) * ($2.$6 - $4.$6));
	}
	double $0()
	{
		return $0() / ($1() * $2.$3);
	}
	$0 $1()				
	{
		double $0 = $1();
		double $0 = ($1.$0 * $2 + $3.$0 * $4 + $5.$0 * $6) / $7;
		double $0 = ($1.$0 * $2 + $3.$0 * $4 + $5.$0 * $6) / $7;
		return new $0($1, $2);
	}
	double $0()
	{
		return $0 * $1 * $2 / ($3.$4 * $5());
	}
	$0 $1() 
	{
		double $0 = $1.$2 - $3.$2, $4 = $1.$5 - $3.$5;
		double $0 = $1.$2 - $3.$2, $4 = $1.$5 - $3.$5;
		double $0 = $1 * ($2.$3 + $4.$3) + $5 * ($2.$6 + $4.$6);
		double $0 = $1 * ($2.$3 + $4.$3) + $5 * ($2.$6 + $4.$6);
		double $0 = $1.$2 * ($3 * ($4.$5 - $6.$5) - $7 * ($4.$8 - $6.$8));
		if ($0.$1($2) < $3) return $4;
		return new $0(($1*$2 - $3*$4) / $5, ($6*$4 - $7*$2) / $5);
	}
	static double $0(double $1, double $2, double $3)		
	{
		double $0 = ($1 + $2 + $3) / $4.$5;							
		return $0.$1($2 * ($2 - $3) * ($2 - $4) * ($2 - $5)) * $6.$7 / $8.$7;
	}
	static double $0(double $1, double $2, double $3)		
	{
		double $0 = $1.$2 / $3, $4 = $1.$2 / $5, $6 = $1.$2 / $7;
		double $0 = ($1 + $2 + $3) / $4.$5;
		return $0.$1 / ($2.$3($4 * ($4 - $5) * ($4 - $6) * ($4 - $7)) * $8.$1);
	}
}
