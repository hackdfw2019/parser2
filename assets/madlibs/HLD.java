public class $0 {
	static int $0, $1[];				
	static $0<$1>[] $2;	
	@$0("$1")
	public static void $0($1[] $2) {
		$0 $1 = new $0($2.$3);
		$0 = $1.$2();
		int $0 = $1.$2();
		$0 = new int[$1];
		for(int $0 = $1; $0 < $2; ++$0)
			$0[$1] = $2.$3();
		$0 = new $1[$2];
		for(int $0 = $1; $0 < $2; ++$0)
			$0[$1] = new $2<$3>();
		while($0-->$1)
		{
			int $0 = $1.$2(), $3 = $1.$2();
			$0[$1].$2($3);
			$0[$1].$2($3);
		}
		$0($1);
		int $0 = $1.$2();
		while($0-->$1)
		{
			int $0 = $1.$2();
			if($0 == $1)
			{
				int $0 = $1.$2(), $3 = $1.$2();
				$0($1, $2);
			}
			else		
			{
				int $0 = $1.$2(), $3 = $1.$2();
				$0.$1.$2($3($4, $5));
			}
		}
		$0.$1();
	}
	static void $0(int $1, int $2)
	{
		$0.$1($2[$3], $4);
		$0[$1] = $2;
	}
	static int $0(int $1, int $2)
	{
		int $0 = $1($2, $3);
		return $0($1, $2) + $0($3, $2) - $4[$2];
	}
	static int $0(int $1, int $2)
	{
		int $0 = $1[$2], $3 = $1[$4], $5 = $6;
		while($0 != $1)
		{
			$0 += $1.$2($3[$4[$5]], $3[$6]);
			$0 = $1[$2[$3]][$4];
			$0 = $1[$2];
		}
		$0 += $1.$2($3[$4], $3[$5]);
		return $0;
	}
	static $0 $1;
	static void $0(int $1)	
	{
		int $0 = (int)($1.$2($1.$3($4)/$1.$3($5))) + $6;
		$0 = new int[$1][$2];
		for(int $0 = $1; $0 < $2; $0++)
			$0.$1($2[$3], -$4);
		$0 = new int[$1];
		$0 = new int[$1];
		$0[$1][$2] = -$3;
		$0($1, -$2, $3);	
		for(int $0 = $1; $0 < $2; $0++)			
			for(int $0 = $1; $0 < $2; $0++)
				if($0[$1][$2-$3] != -$3)
					$0[$1][$2] = $0[$0[$1][$2-$3]][$2-$3];
		$0 = $1; $2 = $1;
		$0 = new int[$1];
		$0 = new int[$1];
		$0 = new int[$1];
		$0 = new int[$1];
		$0 = new int[$1];
		$0.$1($2, -$3);
		$0($1);
		int $0 = (int) $1.$2($3, $1.$4($1.$5($6)/$1.$5($3)));
		int[] $0 = new int[$1+$2];
		for(int $0 = $1; $0 < $2; $0++)
			$0[$1[$2]] = $3[$2];
		$0 = new $1($2);
	}
	static int[][] $0;
	static int[] $0, $1;
	static void $0(int $1, int $2, int $3)
	{
		$0[$1] = $2;
		$0[$1] = $2;
		for(int $0 : $1[$2])
			if($0 != $1)
			{
				$0[$1][$2] = $3;
				$0($1, $2, $3 + $4);
				$0[$1] += $0[$2];
			}
	}
	static int $0, $1;
	static int[] $0, $1, $2, $3, $4;
	static void $0(int $1)
	{
		if($0[$1] == -$2)
			$0[$1] = $2;
		$0[$1] = $2;
		$0[$1] = $2[$3]++;
		$0[$1] = ++$2;
		int $0 = -$1, $2 = -$1;
		for(int $0 : $1[$2])
			if($0[$1][$2] != $3 && $4[$3] > $5)
			{
				$0 = $1[$2];
				$0 = $1;
			}
		if($0 != -$1)
			$0($1);
		for(int $0 : $1[$2])
			if($0[$1][$2] != $3 && $3 != $4)
			{
				$0++;
				$0($1);
			}
	}
	 static int $0(int $1, int $2)
	 {
		 int $0, $1, $2;
		 if ($0[$1] < $0[$2])
		 {
			 $0 = $1; $1 = $2; $2 = $0;
		 }
		 for ($0 = $1; $1 << $0 <= $2[$3]; $0++);
		 $0--;
		 for ($0 = $1; $0 >= $2; $0--)
			 if ($0[$1] - ($2 << $3) >= $0[$4])
				 $0 = $1[$0][$2];
		 if ($0 == $1)
			 return $0;
		 for ($0 = $1; $0 >= $2; $0--)
			 if ($0[$1][$2] != -$3 && $0[$1][$2] != $0[$4][$2])
			 {
				 $0 = $1[$0][$2]; $3 = $1[$3][$2];
			 }
		 return $0[$1][$2];
	 }
	static class $0 {
		int $0;
		int[] $0, $1;
		$0(int[] $1)		
		{
			$0 = $1; $2 = $1.$3 - $4;
			$0 = new int[$1<<$2];
			$0($1,$1,$2);
		}
		void $0(int $1, int $2, int $3)
		{
			if($0 == $1)					
				$0[$1] = $2[$3];
			else						
			{
				$0($1<<$2,$3,($3+$4)/$5);
				$0(($1<<$2)+$2,($3+$4)/$5+$2,$4);
				$0[$1] = $0[$1<<$2]+$0[($1<<$2)+$2];
			}
		}
		void $0(int $1, int $2)
		{
			$0 += $1 - $2;				
			$0[$1] = $2;			
			while($0>$1)				
			{
				$0 >>= $1;
				$0[$1] = $0[$1<<$2] + $0[($1<<$2) + $2];		
			}
		}
		int $0(int $1, int $2)
		{
			return $0($1,$1,$2,$3,$4);
		}
		int $0(int $1, int $2, int $3, int $4, int $5)
		{
			if($0>$1 || $2 <$3)
				return $0;		
			if($0>= $1 && $2 <= $3)
				return $0[$1];
			return $0($1<<$2,$3,($3+$4)/$5,$6,$7) + $0(($1<<$2)+$2,($3+$4)/$5+$2,$4,$6,$7);	
		}
	}
}
