public class $0 { 	
	static final double $0 = $1-$2;
	$0 $1;
	double $0;
	$0($1 $2, double $3) { $4 = $2; $5 = $3; }
	int $0($1 $2)	
	{
		double $0 = $1.$2($3);
		return $0 + $1 < $2 ? $3 : $4.$5($0 - $2) < $1 ? $6 : -$3;
	}
	double $0()	{ return $1 * $2.$3 * $4; }
	double $0() { return $1.$2 * $3 * $3; }
	double $0(double $1) { return $1 / $2.$3 * $4(); }		
	double $0(double $1)
	{ 
		return $0 * $1 * $2.$3($4.$5($6) / $0.$7); 
	}
	double $0(double $1) { return $1 / $2.$3 * $4(); }
	double $0(double $1)
	{
		return $0($1) - $2 * $2 * $3.$4($5.$6($1)) / $7.$8;
	}
	boolean $0($1 $2)
	{
		return $0.$1($2.$0) <= $3 + $2.$3 + $4 && $0.$1($2.$0) + $4 >= $5.$6($3 - $2.$3);
	}
	boolean $0($1 $2, $1 $3)
	{
		$0 $1 = new $0($2, $3);
		if($0.$1($2.$3) < $4)
		{
			if($0.$1 * $0.$1 > $2 * $2 + $3)
				return $0;
			double $0 = $1.$2($1.$3($4 * $4 - $5.$6 * $5.$6)), $7 = -$0;
			return new $0(-$1.$2, $3).$4($5, $6) && new $0(-$1.$2, $7).$4($5, $6);
		}
		double $0 = $1.$0 * $1.$0 + $2, $3 = $4 * $1.$0 * $1.$5, $5 = $1.$5 * $1.$5 - $6 * $6;
		if($0 * $0 - $1 * $2 * $3 + $4 < $5)
			return $0;
		double $0 = $1 * $1 - $2 * $3 * $4;
		double $0 = (-$1 + $2.$3($4)) / ($5.$6 * $7), $8 = (-$1 - $2.$3($4)) / ($5.$6 * $7);
		return new $0($1, - $2.$3 * $1 - $2.$4).$5($6, $7) || new $0($8, - $2.$3 * $8 - $2.$4).$5($6, $7);
	}
	static $0 $1($0 $2, $0 $3, double $4)		
	{
		double $0 = ($1.$2 - $3.$2) * ($1.$2 - $3.$2) + ($1.$4 - $3.$4) * ($1.$4 - $3.$4);
		double $0 = $1 * $1 / $2 - $3.$4;
		if($0.$1($2) < $3)
			$0 = $1.$1;
		if($0 < $1.$1)
			return $0;
		double $0 = $1.$2($3);
		return new $0(($1.$2 + $3.$2) / $4.$5 + ($1.$6 - $3.$6) * $7, ($1.$6 + $3.$6) / $4.$5 + ($3.$2 - $1.$2) * $7);
	}
}
