public class $0 {
	static $0<$1>[] $2, $3;
	static int[] $0, $1;
	static int $0, $1, $2;
	static $0<$1> $2;
	static $0<$0<$1>> $2;
	static void $0()	
	{
		for(int $0 = $1; $0 < $2; ++$0)
			if($0[$1] == $2)
				$0($1, -$2);
	}
	static void $0(int $1, int $2)
	{
		$0[$1] = $2[$1] = ++$3;
		$0.$1($2);
		for(int $0: $1[$2])
			if($0 != $1)
				if($0[$1] == $2)
				{
					$0($1, $2);
					$0[$1] = $2.$3($0[$4], $0[$1]);
					if($0[$1] >= $2[$3])
					{
						$0<$1> $2 = new $0<$1>();
						while($0)
						{
							int $0 = $1.$2();
							$0.$1($2);
							$0[$1].$2($3);
							if($0 == $1)
								break;
						}
						$0.$1($2);
						$0[$1].$2($3);
						$0.$1($2);
						++$0;
					}
				}
				else
					$0[$1] = $2.$3($0[$1], $4[$5]);
	}	
	static void $0()
	{
		$0 = new int[$1]; 
		$0 = new int[$1];
		$0 = new $1<$2>();
		$0 = new $1<$1<$2>>();
		$0 = new $1[$2];
		for(int $0 = $1; $0 < $2; ++$0)
			$0[$1] = new $2<$3>();
		$0();
		for($0<$1> $2 : $3)
			$0.$1.$2($3);
	}
	public static void $0($1[] $2) 
	{	
		$0 $1 = new $0($2.$3);
		$0 = $1.$2();
		$0 = new $1[$2];
		for(int $0 = $1; $0 < $2; ++$0)
			$0[$1] = new $2<$3>();
		int $0 = $1.$2();
		while($0-->$1)
		{
			int $0 = $1.$2(), $3 = $1.$2();
			$0[$1].$2($3);
			$0[$1].$2($3);
		}
		$0();
	}
}
