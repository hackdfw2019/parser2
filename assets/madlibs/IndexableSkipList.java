public class $0 <$1 extends $2<$1>> {	
	class $0 
	{
		$0 $1;
		int $0;
		int $0;
		$0 $1;
		$0 $1;
		public $0($1 $2, int $3, int $4, $0 $5, $0 $6) 
		{
			$0 = $1;
			$0 = $1;
			$0 = $1;
			$0 = $1;
			$0 = $1;
		}
	}
	final static double $0 = $1.$2;
	$0 $1;
	$0 $1;
	int $0;
	public $0() 
	{
		$0 = new $1($2, $3, -$4, $2, $2);
		$0 = new $1();
		$0 = $1;
	}
	public int $0() 
	{
		int $0 = $1;
		while ($0 <= $1.$0 && $2.$3() < $4)
			++$0;
		return $0;
	}
	public $0 $1(int $2)
	{
		if ($0 < $1 || $0 >= $2)
			return $0;
		$0 $1 = $2;
		int $0 = -$1;
		$0 $1 = $2;	
		while ($0 != $1)
		{
			if ($0.$1 != $2 && $3 + $0.$4 < $5) 
			{
				$0 += $1.$2;
				$0 = $0.$1;
			}
			else
			{
				$0.$1--;
				if($0 + $1.$2 + $3 == $4 && $1.$5 != $6)
				{
					$0 = $1.$2.$3;
					$0.$1 += ($0.$2.$1 == -$3 ? $4 : $0.$2.$1);
					$0.$1 = $0.$1.$1;	
				}
				$0 = $0.$1;
			}
		}
		--$0;
		if($0 == $1){			
			$0 = new $1($2, $3, -$4, $2, $2);
		}
		return $0;
	}
	public boolean $0($1 $2, int $3) 
	{
		if ($0 < $1 || $0 > $2)
			return $0;
		int $0 = $1();
		if ($0 > $1.$0)
			$0 = new $1($2, $3, $4, $2, $0);
		int $0 = -$1;
		$0 $1 = $2, $3 = $4;
		while($0 != $1)
		{
			if ($0.$1 != $2 && $3 + $0.$4 < $5) 
			{
				$0 += $1.$2;
				$0 = $0.$1;
			} 
			else 
			{
				$0.$1++;
				if ($0.$1 <= $1) 
				{
					$0 $1 = new $0($2, $3.$4, $5, $3.$6, $7);
					$0.$1 = $2.$1 - ($3 - $4);
					$0.$1 = $2 - $3;
					if($0 != $1)
						$0.$1 = $2;
					$0.$1 = $2;
					$0 = $1;
				}
				$0 = $0.$1;
			}
		}
		++$0;
		return $0;
	}
	public boolean $0($1 $2) 
	{
		int $0 = $1($2);
		if ($0 < $1 || $0 > $2)
			return $0;
		int $0 = $1();
		if ($0 > $1.$0)
			$0 = new $1($2, $3, $4, $2, $0);
		int $0 = -$1;
		$0 $1 = $2, $3 = $4;
		while($0 != $1)
		{
			if ($0.$1 != $2 && $3 + $0.$4 < $5) 
			{
				$0 += $1.$2;
				$0 = $0.$1;
			} 
			else 
			{
				$0.$1++;
				if ($0.$1 <= $1) 
				{
					$0 $1 = new $0($2, $3.$4, $5, $3.$6, $7);
					$0.$1 = $2.$1 - ($3 - $4);
					$0.$1 = $2 - $3;
					if($0 != $1)
						$0.$1 = $2;
					$0.$1 = $2;
					$0 = $1;
				}
				$0 = $0.$1;
			}
		}
		++$0;
		return $0;
	}
	public int $0($1 $2)
	{
		$0 $1 = $2;int $3 = -$4;
		while($0 != $1) 
		{
		  $0 $1 = $2.$1;
		  if ($0 == $1 || $0.$2.$3($4) > $5)
			  $0 = $0.$1;
		  else 
		  {
			  $0 += $1.$2;
			  $0 = $0.$1;
		  }
		}
		return $0 + $1;
	}
	public $0 $1(int $2) 
	{
		if ($0 < $1 || $0 >= $2)
			return $0;
		$0 $1 = $2;
		int $0 = -$1;
		while ($0 != $1) 
		{
			if ($0 == $1)
				return $0.$1;
			if ($0.$1 == $2 || $3 + $0.$4 > $5) 
				$0 = $0.$1;
			else 
			{
				$0 += $1.$2;
				$0 = $0.$1;
			}
		}
		return $0;
	}
	public void $0() 
	{
		$0 $1 = $2;
		while ($0 != $1) 
		{
			$0 $1 = $2;
			$0.$1.$2($3.$4 + " ");
			while ($0 != $1) 
			{
				$0.$1.$2("[" + $3.$4 + " " + $3.$5 + "] ");
				$0 = $0.$1;
			}
			$0.$1.$2();
			$0 = $0.$1;
		}
	}
}