public class $0 {
	static final int $0 = (int)$1;	
	static $0<$1>[] $2;
	static int $0;
	static int $0(int $1, int $2)	
	{
		int[] $0 = new int[$1];
		$0.$1($2, $3);
		$0<$1> $2 = new $0<$1>();
		$0[$1] = $2;
		$0.$1(new $2($3, $4));						
		while(!$0.$1())
		{
			$0 $1 = $2.$3();
			if($0.$1 == $2)						
				return $0[$1];
			if($0.$1 > $2[$0.$3])			
				continue;
			for($0 $1: $2[$3.$4])
				if($0.$1 + $2.$1 < $3[$2.$4])
					$0.$1(new $2($3.$4, $5[$3.$4] = $6.$7 + $3.$7 ));
		}
		return -$0;
	}
	static boolean $0(int $1)		
	{
		int[] $0 = new int[$1];
		$0.$1($2, $3);
		$0[$1] = $2;
		boolean $0 = $1;
		for(int $0 = $1; $2 && $0 < $3 - $4; ++$0)
		{
			$0 = $1;
			for(int $0 = $1; $0 < $2; ++$0)		
				for($0 $1: $2[$3])	
					if($0[$1] + $2.$3 < $0[$2.$4])
					{
						$0 = $1;
						$0[$1.$2] = $0[$3] + $1.$4;
					}
		}
		boolean $0 = $1;
		for(int $0 = $1; $0 < $2; ++$0)
			for($0 $1: $2[$3])
				if($0[$1] + $2.$3 < $0[$2.$4])
					$0 = $1;
		return $0;
	}
	static class $0 implements $1<$0>
	{
		int $0, $1;
		$0(int $1, int $2) { $3 = $1;	$4 = $2; }
		public int $0($1 $2){ return $3 - $2.$3;	}
	}
}
