public class $0 {
	static $0<$1> $2;					
	static $0<$1> $2(int $3)		
	{
		$0<$1> $2 = new $0<$1>();		
		int $0 = $1, $2 = $3.$4($0);
		while($0 * $0 <= $1)
		{
			while($0 % $1 == $2) { $3.$4($1); $0 /= $1; }
			$0 = $1.$2(++$3);
		}
		if($0 != $1)						
			$0.$1($2);				
		return $0;
	}
	static long $0(int $1)
	{
		int $0 = $1, $2 = $3.$4($1);
		long $0 = $1;
		while($0 * $0 <= $1)
		{
			int $0 = $1;
			while($0 % $1 == $2) { $0 /= $1; ++$3; }
			$0 *= ($1($2, $3 + $4) - $4) / ($2 - $4);
			$0 = $1.$2(++$3);
		}
		if($0 != $1)
			$0 *= ($1($2, $3) - $4) / ($2 - $4);
		return $0;
	}
	static int $0(int $1)
	{
		int $0 = $1, $2 = $3, $4 = $5.$6($3);
		while($0 * $0 <= $1)
		{
			if($0 % $1 == $2)
				$0 -= $0 / $1;
			while($0 % $1 == $2)
				$0 /= $1;
			$0 = $1.$2(++$3);
		}
		if($0 != $1) 
			$0 -= $0 / $1;
		return $0;
	}
	static long $0(long $1, int $2)
	{
		long $0 = $1;
		while($0 != $1)
		{
			if(($0 & $1) == $1)
				$0 *= $1;
			$0 *= $0;
			$0 >>= $1;			
		}
		return $0;
	}
}
