public class $0 {		
	int $0; 			
	int[] $0, $1, $2;
	$0(int[] $1)		
	{
		$0 = $1; $2 = $1.$3 - $4;
		$0 = new int[$1<<$2];		
		$0 = new int[$1<<$2];
		$0($1,$1,$2);
	}
	void $0(int $1, int $2, int $3)	
	{
		if($0 == $1)					
			$0[$1] = $2[$3];
		else						
		{
			int $0 = $1 + $2 >> $3;
			$0($1<<$2,$3,$4);
			$0($1<<$2|$2,$3+$2,$4);
			$0[$1] = $0[$1<<$2]+$0[$1<<$2|$2];
		}
	}
	void $0(int $1, int $2)			
	{
		$0 += $1 - $2;				
		$0[$1] += $2;			
		while($0>$1)				
		{
			$0 >>= $1;
			$0[$1] = $0[$1<<$2] + $0[$1<<$2|$2];		
		}
	}
	void $0(int $1, int $2, int $3)		 
	{
		$0($1,$1,$2,$3,$4,$5);
	}
	void $0(int $1, int $2, int $3, int $4, int $5, int $6)
	{
		if($0 > $1 || $2 < $3)		
			return;
		if($0 >= $1 && $2 <= $3)		
		{
			$0[$1] += ($2-$3+$4)*$5;			
			$0[$1] += $2;				
		}							
		else		
		{
			int $0 = $1 + $2 >> $3;
			$0($1, $2, $3, $4);
			$0($1<<$2,$3,$4,$5,$6,$7);
			$0($1<<$2|$2,$3+$2,$4,$5,$6,$7);
			$0[$1] = $0[$1<<$2] + $0[$1<<$2|$2];		
		}
	}
	void $0(int $1, int $2, int $3, int $4)		
	{
		$0[$1<<$2] += $0[$1];
		$0[$1<<$2|$2] += $0[$1];
		$0[$1<<$2] += ($3-$4+$2)*$5[$1];		
		$0[$1<<$2|$2] += ($3-$4)*$5[$1];		
		$0[$1] = $2;
	}
	int $0(int $1, int $2)
	{
		return $0($1,$1,$2,$3,$4);
	}
	int $0(int $1, int $2, int $3, int $4, int $5)	
	{
		if($0>$1 || $2 <$3)
			return $0;		
		if($0>= $1 && $2 <= $3)
			return $0[$1];
		int $0 = $1 + $2 >> $3;
		$0($1, $2, $3, $4);
		int $0 = $1($2<<$3,$4,$5,$6,$7);
		int $0 = $1($2<<$3|$3,$4+$3,$5,$6,$7);
		return $0 + $1;	
	}
	public static void $0($1[] $2) {
		$0 $1 = new $0($2.$3);
		int $0 = $1.$2();
		int $0 = $1; while($0 < $2) $0 <<= $1; 
		int[] $0 = new int[$1 + $2];
		for(int $0 = $1; $0 <= $2; $0++)
			$0[$1] = $2.$3();
		$0.$1();
	}
}
