public class $0 {
	static final int[] $0 = new int[] {$1, $1, $1, -$2, $2, -$2, $2, -$2, $2};
	static final int[] $0 = new int[] {$1, -$2, $2, $1, $1, -$2, $2, $2, -$2};
	static final int $0 = $1, $2 = $3;
	static int $0, $1;
	static char[][] $0;
	static boolean[] $0, $1, $2;
	static int[] $0;
	static $0<$1>[] $2;
	static void $0()	
	{
		for(int $0 = $1; $0 < $2; ++ $0)
			for(int $0 = $1; $0 < $2 * $3; ++$0)
				for(int $0 = $1; $0 < $2 * $3; ++$0)
				{
					int $0 = $1 / $2, $3 = $1 % $2, $4 = $5 / $2, $6 = $5 % $2;
					if($0[$1][$2] == '*' || $0[$3][$4] == '*')
						continue;
					int $0 = $1($2, $3, $4);
					if($0 == $1)
					{
						$0[$1] = $2 == $3;
						$0[$1] = !$2[$1] && $3[$4][$5] == '$6';
					}
					else
					{
						$0[$1] = $2[$3][$4] == '$5';
						$0[$1] = !$2[$1] && $3 == $4;
					}
					if($0[$1] || $2[$1])
						continue;
					int $0 = $1($2, $3, $4 ^ $5);
					$0[$1].$2($3);
					$0[$1] = $2;
					int $0 = $1 == $2 ? $3 : $4;
					int $0 = $1 == $2 ? $3 : $4;
					for(int $0 = $1, $2 = $3 == $4 ? $5 : $6; $0 <= $2; ++$0)
					{
						int $0 = $1 + $2[$3 * $4], $5 = $6 + $7[$3 * $4];
						int $0 = $1 + $2[$3 * $4], $5 = $6 + $7[$3 * $4];
						if($0($1, $2) && $0($3, $4))
						{
							$0 = $1($2 * $3 + $4, $5 * $3 + $6, $7 ^ $8);
							$0[$1].$2($3);
							++$0[$1];
						}
					}
				}
	}
	static boolean $0(int $1, int $2) { return $1 >= $3 && $2 >= $3 && $1 < $4 && $2 < $5 && $6[$1][$2] != '#'; }
	static int $0(int $1, int $2, int $3) { return ($1 * $4 * $5 + $2) * $6 + $3; }
}
