public class $0 <$1 extends $2<$1>>
{
	class $0<$1 extends $2<$1>>
	{
		$0 $1;
		$0<$1> $2, $3;
		int $0, $1;
		$0($1 $2, int $3, int $4, $0<$1> $5, $0<$1> $6)
		{
			$0 = $1;
			$0 = $1;
			$0 = $1;
			$0 = $1;
			$0 = $1;
		}
	}
	$0 $1 = new $0();
	$0<$1> $2 = new $0<$1>($3, $4.$5, $6, $3, $3);
	$0<$1> $2 = $3;
	$0<$1> $2($0<$1> $3)
	{
		if($0.$1.$2 < $0.$2)
			return $0($1);
		if($0.$1.$2 < $0.$2)
			return $0($1);
		return $0;
	}
	void $0($1 $2) { $3 = $0($2, $3); }
	$0<$1> $2($1 $3, $0<$1> $4)
	{
		if($0 == $1) return $1;
		if($0.$1($2.$0) < $3)
		{
			$0.$1 = $2($3, $0.$1);
			$0($1);
			return $0;
		}
		if($0.$1($2.$0) > $3)
		{
			$0.$1 = $2($3, $0.$1);
			$0($1);
			return $0;
		}
		if($0.$1 == $2 && $0.$3 == $2)
			return $0;
		return $0($1, $2.$3.$4 < $2.$5.$4? $6($2):$7($2));
	}
	int $0() { return $0($1); }
	int $0($1<$2> $3)
	{
		if($0 == $1) return -$2;
		return $0 + $1.$2($3($4.$5), $3($4.$6));
	}
	int $0($1 $2) { return $0($2, $3); }
	int $0($1 $2, $3<$1> $4)
	{
		if($0 == $1) return $2.$3;
		if($0.$1($2.$0) < $3) return $4($0, $2.$5);
		if($0.$1($2.$0) > $3) return $4($0, $2.$5) + $2.$6.$7 + $8;
		return $0.$1.$2;
	}
	void $0($1 $2) { $3 = $0($2, $3); }
	$0<$1> $2($1 $3, $0<$1> $4)
	{
		if($0 == $1) return new $2<$3>($4, $5.$6($7<<$8), $7, $1, $1);
		if($0.$1($2.$0) < $3)
			$0.$1 = $2($3, $0.$1);
		else
			if($0.$1($2.$0) > $3)
				$0.$1 = $2($3, $0.$1);
		$0($1);
		return $0($1);
	}
	$0 $1(int $2) { return $1($2, $3);}
	$0 $1(int $2, $3<$0> $4)
	{
		if($0 == $1) return $2;
		if($0 < $1.$2.$3)
			return $0($1, $2.$3);
		if($0 > $1.$2.$3)
			return $0($1  - $2.$3.$4 - $5, $2.$6);
		return $0.$1;
	}
	void $0()
	{
		$0.$1.$2("[");
		$0($1);
		$0.$1.$2("]");
	}
	void $0($1<$2> $3)
	{
		if($0 == $1) return;
		$0($1.$2);
		$0.$1.$2(" " + $3.$4);
		$0($1.$2);
	}
	$0<$1> $2($0<$1> $3)
	{
		$0<$1> $2 = $3.$4;
		$0.$1 = $2.$3;
		$0.$1 = $2;
		$0($1.$2);
		$0($1);
		return $0;
	}
	$0<$1> $2($0<$1> $3)
	{
		$0<$1> $2 = $3.$4;
		$0.$1 = $2.$3;
		$0.$1 = $2;
		$0($1.$2);
		$0($1);
		return $0;
	}
	boolean $0($1 $2) {return $0($2, $3); }
	boolean $0($1 $2, $3<$1> $4)
	{
		if($0 == $1) return $2;
		if($0.$1($2.$0) < $3)
			return $0($1, $2.$3);
		if($0.$1($2.$0) > $3)
			return $0($1, $2.$3);
		return $0;
	}
	int $0() { return $1.$0; }
	void $0($1<$2> $3)
	{
		if($0 != $1)
			$0.$1 = $0.$2.$1 + $3 + $0.$4.$1;
	}
}