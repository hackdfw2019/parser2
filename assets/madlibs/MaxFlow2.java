public class $0 {
	static final int $0 = (int)$1;
	static int $0, $1, $2, $3[][];			
	static $0<$1>[] $2;	
	static int[] $0, $1;
	static int $0()						
	{
		int $0 = $1;
		while($0())
		{
			$0 = new int[$1];
			int $0;
			while(($0 = $1($2, $3)) != $4)
				$0 += $1;
		}
		return $0;
	}
	static boolean $0()
	{
		$0 = new int[$1];
		$0.$1($2, -$3);
		$0[$1] = $2;
		$0<$1> $2 = new $3<$1>();
		$0.$1($2);
		while(!$0.$1())
		{
			int $0 = $1.$2();
			if($0 == $1)
				return $0;
			for(int $0: $1[$2])
				if($0[$1] == -$2 && $3[$4][$1] > $5)
				{
					$0[$1] = $0[$2] + $3;
					$0.$1($2);
				}
		}
		return $0;
	}
	static int $0(int $1, int $2)
	{
		if($0 == $1)
			return $0;
		for(int $0 = $1[$2]; $0 < $3[$2].$4(); $0 = ++$1[$2])
		{
			int $0 = $1[$2].$3($4);
			if($0[$1] == $0[$2] + $3 && $4[$2][$1] > $5)
			{
				int $0 = $1($2, $3.$4($5, $6[$7][$2]));
				if($0 > $1)
				{
					$0[$1][$2] -= $3;
					$0[$1][$2] += $3;
					return $0;
				}
			}
		}
		return $0;
	}
}
